version-tags: &version-tags
  tags:
    only: /v\d+\.\d+\.\d+/

version: 2
jobs:
  test-py27:
    docker:
      - image: circleci/python:2.7.16
    working_directory: /home/circleci/project
    steps:
      - checkout
      - restore_cache:
          keys:
              - deps-py27-{{ checksum "poetry.lock" }}
              - deps-py27-
      - run:
          name: "Installation"
          command: |
              mv poetry.lock _poetry.lock  # bug workaround
              if [[ ! -d /home/circleci/venv ]]; then
                virtualenv /home/circleci/venv
                pip install pytest openturns scikit-learn==0.20.1
              fi
              source /home/circleci/venv/bin/activate
              pip install .
      - save_cache:
          key: deps-py27-{{ checksum "_poetry.lock" }}
          paths:
              - /home/circleci/venv
      - run:
          name: "Run tests"
          command: |
              source /home/circleci/venv/bin/activate
              pytest --doctest-modules chaospy
  build-cache:
    docker:
      - image: circleci/python:3.7.3
    working_directory: /home/circleci/project
    steps:
      - checkout
      - restore_cache:
          keys:
              - deps-{{ checksum "poetry.lock" }}
              - deps-
      - run:
          name: "Installation"
          command: |
              python3 -m venv /home/circleci/venv
              source /home/circleci/venv/bin/activate
              poetry install
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
              - /home/circleci/venv
      - persist_to_workspace:
          paths:
              - project
              - venv
          root: /home/circleci
  test:
    docker:
        - image: circleci/python:3.7.3
    working_directory: /home/circleci/project
    steps:
        - attach_workspace:
            at: /home/circleci
        - run:
            name: "Run tests"
            command: |
                source /home/circleci/venv/bin/activate
                pytest --doctest-modules --cov=chaospy chaospy tests doc/*.rst
                codecov
  sphinx:
    docker:
      - image: circleci/python:3.7.3
    working_directory: /home/circleci/project
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: "Ensure documentation build"
          command: |
              source /home/circleci/venv/bin/activate
              sphinx-build doc/ doc/.build -b html -n -v --color -T -W
  deploy:
    docker:
      - image: circleci/python:2.7.16
    working_directory: /home/circleci/project
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: "Publish to PyPI"
          command: |
              source /home/circleci/venv/bin/activate
              poetry publish --build --username jonathf \
                  --password $PYPI_PASSWORD --no-interaction

workflows:
  version: 2
  workflow:
    jobs:
      - test-py27:
          filters:
            <<: *version-tags
      - build-cache:
          filters:
            <<: *version-tags
      - test:
          filters:
            <<: *version-tags
          requires:
            - build-cache
      - sphinx:
          filters:
            <<: *version-tags
          requires:
            - build-cache
      - deploy:
          requires:
            - test-py27
            - test
            - sphinx
          filters:
            <<: *version-tags
            branches:
                ignore: /.*/
